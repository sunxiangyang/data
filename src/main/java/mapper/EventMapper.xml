<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.EventMapper">
  <resultMap id="BaseResultMap" type="bean.Event">
    <id column="name" jdbcType="VARCHAR" property="name" />
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="scope_id" jdbcType="INTEGER" property="scopeId" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="source_id" jdbcType="INTEGER" property="sourceId" />
    <result column="keyword_str" jdbcType="VARCHAR" property="keywordStr" />
    <result column="is_report" jdbcType="INTEGER" property="isReport" />
    <result column="origin" jdbcType="VARCHAR" property="origin" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="accessory" jdbcType="VARCHAR" property="accessory" />
    <result column="sort_num" jdbcType="VARCHAR" property="sortNum" />
    <result column="happened" jdbcType="TIMESTAMP" property="happened" />
    <result column="creator_id" jdbcType="INTEGER" property="creatorId" />
    <result column="creator_name" jdbcType="VARCHAR" property="creatorName" />
    <result column="updater_id" jdbcType="INTEGER" property="updaterId" />
    <result column="updater_name" jdbcType="VARCHAR" property="updaterName" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="deleted_at" jdbcType="TIMESTAMP" property="deletedAt" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="bean.EventWithBLOBs">
    <result column="intro" jdbcType="LONGVARCHAR" property="intro" />
    <result column="figure_data" jdbcType="LONGVARCHAR" property="figureData" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    name, id, scope_id, type_id, source_id, keyword_str, is_report, origin, note, accessory, 
    sort_num, happened, creator_id, creator_name, updater_id, updater_name, created_at, 
    updated_at, deleted_at
  </sql>
  <sql id="Blob_Column_List">
    intro, figure_data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="bean.EventExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="bean.EventExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from event
    where name = #{name,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from event
    where name = #{name,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="bean.EventExample">
    delete from event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="bean.EventWithBLOBs">
    insert into event (name, id, scope_id, 
      type_id, source_id, keyword_str, 
      is_report, origin, note, 
      accessory, sort_num, happened, 
      creator_id, creator_name, updater_id, 
      updater_name, created_at, updated_at, 
      deleted_at, intro, figure_data
      )
    values (#{name,jdbcType=VARCHAR}, #{id,jdbcType=INTEGER}, #{scopeId,jdbcType=INTEGER}, 
      #{typeId,jdbcType=INTEGER}, #{sourceId,jdbcType=INTEGER}, #{keywordStr,jdbcType=VARCHAR}, 
      #{isReport,jdbcType=INTEGER}, #{origin,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, 
      #{accessory,jdbcType=VARCHAR}, #{sortNum,jdbcType=VARCHAR}, #{happened,jdbcType=TIMESTAMP}, 
      #{creatorId,jdbcType=INTEGER}, #{creatorName,jdbcType=VARCHAR}, #{updaterId,jdbcType=INTEGER}, 
      #{updaterName,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{deletedAt,jdbcType=TIMESTAMP}, #{intro,jdbcType=LONGVARCHAR}, #{figureData,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="bean.EventWithBLOBs">
    insert into event
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="id != null">
        id,
      </if>
      <if test="scopeId != null">
        scope_id,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="sourceId != null">
        source_id,
      </if>
      <if test="keywordStr != null">
        keyword_str,
      </if>
      <if test="isReport != null">
        is_report,
      </if>
      <if test="origin != null">
        origin,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="accessory != null">
        accessory,
      </if>
      <if test="sortNum != null">
        sort_num,
      </if>
      <if test="happened != null">
        happened,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="creatorName != null">
        creator_name,
      </if>
      <if test="updaterId != null">
        updater_id,
      </if>
      <if test="updaterName != null">
        updater_name,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="deletedAt != null">
        deleted_at,
      </if>
      <if test="intro != null">
        intro,
      </if>
      <if test="figureData != null">
        figure_data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="scopeId != null">
        #{scopeId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="sourceId != null">
        #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="keywordStr != null">
        #{keywordStr,jdbcType=VARCHAR},
      </if>
      <if test="isReport != null">
        #{isReport,jdbcType=INTEGER},
      </if>
      <if test="origin != null">
        #{origin,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="accessory != null">
        #{accessory,jdbcType=VARCHAR},
      </if>
      <if test="sortNum != null">
        #{sortNum,jdbcType=VARCHAR},
      </if>
      <if test="happened != null">
        #{happened,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="creatorName != null">
        #{creatorName,jdbcType=VARCHAR},
      </if>
      <if test="updaterId != null">
        #{updaterId,jdbcType=INTEGER},
      </if>
      <if test="updaterName != null">
        #{updaterName,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedAt != null">
        #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="intro != null">
        #{intro,jdbcType=LONGVARCHAR},
      </if>
      <if test="figureData != null">
        #{figureData,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="bean.EventExample" resultType="java.lang.Integer">
    select count(*) from event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update event
    <set>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.scopeId != null">
        scope_id = #{record.scopeId,jdbcType=INTEGER},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.sourceId != null">
        source_id = #{record.sourceId,jdbcType=INTEGER},
      </if>
      <if test="record.keywordStr != null">
        keyword_str = #{record.keywordStr,jdbcType=VARCHAR},
      </if>
      <if test="record.isReport != null">
        is_report = #{record.isReport,jdbcType=INTEGER},
      </if>
      <if test="record.origin != null">
        origin = #{record.origin,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.accessory != null">
        accessory = #{record.accessory,jdbcType=VARCHAR},
      </if>
      <if test="record.sortNum != null">
        sort_num = #{record.sortNum,jdbcType=VARCHAR},
      </if>
      <if test="record.happened != null">
        happened = #{record.happened,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creatorId != null">
        creator_id = #{record.creatorId,jdbcType=INTEGER},
      </if>
      <if test="record.creatorName != null">
        creator_name = #{record.creatorName,jdbcType=VARCHAR},
      </if>
      <if test="record.updaterId != null">
        updater_id = #{record.updaterId,jdbcType=INTEGER},
      </if>
      <if test="record.updaterName != null">
        updater_name = #{record.updaterName,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deletedAt != null">
        deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.intro != null">
        intro = #{record.intro,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.figureData != null">
        figure_data = #{record.figureData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update event
    set name = #{record.name,jdbcType=VARCHAR},
      id = #{record.id,jdbcType=INTEGER},
      scope_id = #{record.scopeId,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=INTEGER},
      source_id = #{record.sourceId,jdbcType=INTEGER},
      keyword_str = #{record.keywordStr,jdbcType=VARCHAR},
      is_report = #{record.isReport,jdbcType=INTEGER},
      origin = #{record.origin,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR},
      accessory = #{record.accessory,jdbcType=VARCHAR},
      sort_num = #{record.sortNum,jdbcType=VARCHAR},
      happened = #{record.happened,jdbcType=TIMESTAMP},
      creator_id = #{record.creatorId,jdbcType=INTEGER},
      creator_name = #{record.creatorName,jdbcType=VARCHAR},
      updater_id = #{record.updaterId,jdbcType=INTEGER},
      updater_name = #{record.updaterName,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP},
      intro = #{record.intro,jdbcType=LONGVARCHAR},
      figure_data = #{record.figureData,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update event
    set name = #{record.name,jdbcType=VARCHAR},
      id = #{record.id,jdbcType=INTEGER},
      scope_id = #{record.scopeId,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=INTEGER},
      source_id = #{record.sourceId,jdbcType=INTEGER},
      keyword_str = #{record.keywordStr,jdbcType=VARCHAR},
      is_report = #{record.isReport,jdbcType=INTEGER},
      origin = #{record.origin,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR},
      accessory = #{record.accessory,jdbcType=VARCHAR},
      sort_num = #{record.sortNum,jdbcType=VARCHAR},
      happened = #{record.happened,jdbcType=TIMESTAMP},
      creator_id = #{record.creatorId,jdbcType=INTEGER},
      creator_name = #{record.creatorName,jdbcType=VARCHAR},
      updater_id = #{record.updaterId,jdbcType=INTEGER},
      updater_name = #{record.updaterName,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="bean.EventWithBLOBs">
    update event
    <set>
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="scopeId != null">
        scope_id = #{scopeId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="sourceId != null">
        source_id = #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="keywordStr != null">
        keyword_str = #{keywordStr,jdbcType=VARCHAR},
      </if>
      <if test="isReport != null">
        is_report = #{isReport,jdbcType=INTEGER},
      </if>
      <if test="origin != null">
        origin = #{origin,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="accessory != null">
        accessory = #{accessory,jdbcType=VARCHAR},
      </if>
      <if test="sortNum != null">
        sort_num = #{sortNum,jdbcType=VARCHAR},
      </if>
      <if test="happened != null">
        happened = #{happened,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="creatorName != null">
        creator_name = #{creatorName,jdbcType=VARCHAR},
      </if>
      <if test="updaterId != null">
        updater_id = #{updaterId,jdbcType=INTEGER},
      </if>
      <if test="updaterName != null">
        updater_name = #{updaterName,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedAt != null">
        deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="intro != null">
        intro = #{intro,jdbcType=LONGVARCHAR},
      </if>
      <if test="figureData != null">
        figure_data = #{figureData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where name = #{name,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="bean.EventWithBLOBs">
    update event
    set id = #{id,jdbcType=INTEGER},
      scope_id = #{scopeId,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER},
      source_id = #{sourceId,jdbcType=INTEGER},
      keyword_str = #{keywordStr,jdbcType=VARCHAR},
      is_report = #{isReport,jdbcType=INTEGER},
      origin = #{origin,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      accessory = #{accessory,jdbcType=VARCHAR},
      sort_num = #{sortNum,jdbcType=VARCHAR},
      happened = #{happened,jdbcType=TIMESTAMP},
      creator_id = #{creatorId,jdbcType=INTEGER},
      creator_name = #{creatorName,jdbcType=VARCHAR},
      updater_id = #{updaterId,jdbcType=INTEGER},
      updater_name = #{updaterName,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      intro = #{intro,jdbcType=LONGVARCHAR},
      figure_data = #{figureData,jdbcType=LONGVARCHAR}
    where name = #{name,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="bean.Event">
    update event
    set id = #{id,jdbcType=INTEGER},
      scope_id = #{scopeId,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER},
      source_id = #{sourceId,jdbcType=INTEGER},
      keyword_str = #{keywordStr,jdbcType=VARCHAR},
      is_report = #{isReport,jdbcType=INTEGER},
      origin = #{origin,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      accessory = #{accessory,jdbcType=VARCHAR},
      sort_num = #{sortNum,jdbcType=VARCHAR},
      happened = #{happened,jdbcType=TIMESTAMP},
      creator_id = #{creatorId,jdbcType=INTEGER},
      creator_name = #{creatorName,jdbcType=VARCHAR},
      updater_id = #{updaterId,jdbcType=INTEGER},
      updater_name = #{updaterName,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      deleted_at = #{deletedAt,jdbcType=TIMESTAMP}
    where name = #{name,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="bean.Event">
    <id column="db" jdbcType="CHAR" property="db" />
    <id column="name" jdbcType="CHAR" property="name" />
    <result column="definer" jdbcType="CHAR" property="definer" />
    <result column="execute_at" jdbcType="TIMESTAMP" property="executeAt" />
    <result column="interval_value" jdbcType="INTEGER" property="intervalValue" />
    <result column="interval_field" jdbcType="CHAR" property="intervalField" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="modified" jdbcType="TIMESTAMP" property="modified" />
    <result column="last_executed" jdbcType="TIMESTAMP" property="lastExecuted" />
    <result column="starts" jdbcType="TIMESTAMP" property="starts" />
    <result column="ends" jdbcType="TIMESTAMP" property="ends" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="on_completion" jdbcType="CHAR" property="onCompletion" />
    <result column="sql_mode" jdbcType="CHAR" property="sqlMode" />
    <result column="comment" jdbcType="CHAR" property="comment" />
    <result column="originator" jdbcType="INTEGER" property="originator" />
    <result column="time_zone" jdbcType="CHAR" property="timeZone" />
    <result column="character_set_client" jdbcType="CHAR" property="characterSetClient" />
    <result column="collation_connection" jdbcType="CHAR" property="collationConnection" />
    <result column="db_collation" jdbcType="CHAR" property="dbCollation" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="bean.EventWithBLOBs">
    <result column="body" jdbcType="LONGVARBINARY" property="body" />
    <result column="body_utf8" jdbcType="LONGVARBINARY" property="bodyUtf8" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    db, name, definer, execute_at, interval_value, interval_field, created, modified, 
    last_executed, starts, ends, status, on_completion, sql_mode, comment, originator, 
    time_zone, character_set_client, collation_connection, db_collation
  </sql>
  <sql id="Blob_Column_List">
    body, body_utf8
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="bean.EventExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="bean.EventExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="bean.EventKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from event
    where db = #{db,jdbcType=CHAR}
      and name = #{name,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="bean.EventKey">
    delete from event
    where db = #{db,jdbcType=CHAR}
      and name = #{name,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="bean.EventExample">
    delete from event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="bean.EventWithBLOBs">
    insert into event (db, name, definer, execute_at, 
      interval_value, interval_field, created, 
      modified, last_executed, starts, 
      ends, status, on_completion, 
      sql_mode, comment, originator, 
      time_zone, character_set_client, collation_connection, 
      db_collation, body, body_utf8
      )
    values (#{db,jdbcType=CHAR}, #{name,jdbcType=CHAR}, #{definer,jdbcType=CHAR}, #{executeAt,jdbcType=TIMESTAMP}, 
      #{intervalValue,jdbcType=INTEGER}, #{intervalField,jdbcType=CHAR}, #{created,jdbcType=TIMESTAMP}, 
      #{modified,jdbcType=TIMESTAMP}, #{lastExecuted,jdbcType=TIMESTAMP}, #{starts,jdbcType=TIMESTAMP}, 
      #{ends,jdbcType=TIMESTAMP}, #{status,jdbcType=CHAR}, #{onCompletion,jdbcType=CHAR}, 
      #{sqlMode,jdbcType=CHAR}, #{comment,jdbcType=CHAR}, #{originator,jdbcType=INTEGER}, 
      #{timeZone,jdbcType=CHAR}, #{characterSetClient,jdbcType=CHAR}, #{collationConnection,jdbcType=CHAR}, 
      #{dbCollation,jdbcType=CHAR}, #{body,jdbcType=LONGVARBINARY}, #{bodyUtf8,jdbcType=LONGVARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="bean.EventWithBLOBs">
    insert into event
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="db != null">
        db,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="definer != null">
        definer,
      </if>
      <if test="executeAt != null">
        execute_at,
      </if>
      <if test="intervalValue != null">
        interval_value,
      </if>
      <if test="intervalField != null">
        interval_field,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="modified != null">
        modified,
      </if>
      <if test="lastExecuted != null">
        last_executed,
      </if>
      <if test="starts != null">
        starts,
      </if>
      <if test="ends != null">
        ends,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="onCompletion != null">
        on_completion,
      </if>
      <if test="sqlMode != null">
        sql_mode,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="originator != null">
        originator,
      </if>
      <if test="timeZone != null">
        time_zone,
      </if>
      <if test="characterSetClient != null">
        character_set_client,
      </if>
      <if test="collationConnection != null">
        collation_connection,
      </if>
      <if test="dbCollation != null">
        db_collation,
      </if>
      <if test="body != null">
        body,
      </if>
      <if test="bodyUtf8 != null">
        body_utf8,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="db != null">
        #{db,jdbcType=CHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=CHAR},
      </if>
      <if test="definer != null">
        #{definer,jdbcType=CHAR},
      </if>
      <if test="executeAt != null">
        #{executeAt,jdbcType=TIMESTAMP},
      </if>
      <if test="intervalValue != null">
        #{intervalValue,jdbcType=INTEGER},
      </if>
      <if test="intervalField != null">
        #{intervalField,jdbcType=CHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="modified != null">
        #{modified,jdbcType=TIMESTAMP},
      </if>
      <if test="lastExecuted != null">
        #{lastExecuted,jdbcType=TIMESTAMP},
      </if>
      <if test="starts != null">
        #{starts,jdbcType=TIMESTAMP},
      </if>
      <if test="ends != null">
        #{ends,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="onCompletion != null">
        #{onCompletion,jdbcType=CHAR},
      </if>
      <if test="sqlMode != null">
        #{sqlMode,jdbcType=CHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=CHAR},
      </if>
      <if test="originator != null">
        #{originator,jdbcType=INTEGER},
      </if>
      <if test="timeZone != null">
        #{timeZone,jdbcType=CHAR},
      </if>
      <if test="characterSetClient != null">
        #{characterSetClient,jdbcType=CHAR},
      </if>
      <if test="collationConnection != null">
        #{collationConnection,jdbcType=CHAR},
      </if>
      <if test="dbCollation != null">
        #{dbCollation,jdbcType=CHAR},
      </if>
      <if test="body != null">
        #{body,jdbcType=LONGVARBINARY},
      </if>
      <if test="bodyUtf8 != null">
        #{bodyUtf8,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="bean.EventExample" resultType="java.lang.Integer">
    select count(*) from event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update event
    <set>
      <if test="record.db != null">
        db = #{record.db,jdbcType=CHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=CHAR},
      </if>
      <if test="record.definer != null">
        definer = #{record.definer,jdbcType=CHAR},
      </if>
      <if test="record.executeAt != null">
        execute_at = #{record.executeAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.intervalValue != null">
        interval_value = #{record.intervalValue,jdbcType=INTEGER},
      </if>
      <if test="record.intervalField != null">
        interval_field = #{record.intervalField,jdbcType=CHAR},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modified != null">
        modified = #{record.modified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastExecuted != null">
        last_executed = #{record.lastExecuted,jdbcType=TIMESTAMP},
      </if>
      <if test="record.starts != null">
        starts = #{record.starts,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ends != null">
        ends = #{record.ends,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.onCompletion != null">
        on_completion = #{record.onCompletion,jdbcType=CHAR},
      </if>
      <if test="record.sqlMode != null">
        sql_mode = #{record.sqlMode,jdbcType=CHAR},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=CHAR},
      </if>
      <if test="record.originator != null">
        originator = #{record.originator,jdbcType=INTEGER},
      </if>
      <if test="record.timeZone != null">
        time_zone = #{record.timeZone,jdbcType=CHAR},
      </if>
      <if test="record.characterSetClient != null">
        character_set_client = #{record.characterSetClient,jdbcType=CHAR},
      </if>
      <if test="record.collationConnection != null">
        collation_connection = #{record.collationConnection,jdbcType=CHAR},
      </if>
      <if test="record.dbCollation != null">
        db_collation = #{record.dbCollation,jdbcType=CHAR},
      </if>
      <if test="record.body != null">
        body = #{record.body,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.bodyUtf8 != null">
        body_utf8 = #{record.bodyUtf8,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update event
    set db = #{record.db,jdbcType=CHAR},
      name = #{record.name,jdbcType=CHAR},
      definer = #{record.definer,jdbcType=CHAR},
      execute_at = #{record.executeAt,jdbcType=TIMESTAMP},
      interval_value = #{record.intervalValue,jdbcType=INTEGER},
      interval_field = #{record.intervalField,jdbcType=CHAR},
      created = #{record.created,jdbcType=TIMESTAMP},
      modified = #{record.modified,jdbcType=TIMESTAMP},
      last_executed = #{record.lastExecuted,jdbcType=TIMESTAMP},
      starts = #{record.starts,jdbcType=TIMESTAMP},
      ends = #{record.ends,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=CHAR},
      on_completion = #{record.onCompletion,jdbcType=CHAR},
      sql_mode = #{record.sqlMode,jdbcType=CHAR},
      comment = #{record.comment,jdbcType=CHAR},
      originator = #{record.originator,jdbcType=INTEGER},
      time_zone = #{record.timeZone,jdbcType=CHAR},
      character_set_client = #{record.characterSetClient,jdbcType=CHAR},
      collation_connection = #{record.collationConnection,jdbcType=CHAR},
      db_collation = #{record.dbCollation,jdbcType=CHAR},
      body = #{record.body,jdbcType=LONGVARBINARY},
      body_utf8 = #{record.bodyUtf8,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update event
    set db = #{record.db,jdbcType=CHAR},
      name = #{record.name,jdbcType=CHAR},
      definer = #{record.definer,jdbcType=CHAR},
      execute_at = #{record.executeAt,jdbcType=TIMESTAMP},
      interval_value = #{record.intervalValue,jdbcType=INTEGER},
      interval_field = #{record.intervalField,jdbcType=CHAR},
      created = #{record.created,jdbcType=TIMESTAMP},
      modified = #{record.modified,jdbcType=TIMESTAMP},
      last_executed = #{record.lastExecuted,jdbcType=TIMESTAMP},
      starts = #{record.starts,jdbcType=TIMESTAMP},
      ends = #{record.ends,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=CHAR},
      on_completion = #{record.onCompletion,jdbcType=CHAR},
      sql_mode = #{record.sqlMode,jdbcType=CHAR},
      comment = #{record.comment,jdbcType=CHAR},
      originator = #{record.originator,jdbcType=INTEGER},
      time_zone = #{record.timeZone,jdbcType=CHAR},
      character_set_client = #{record.characterSetClient,jdbcType=CHAR},
      collation_connection = #{record.collationConnection,jdbcType=CHAR},
      db_collation = #{record.dbCollation,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="bean.EventWithBLOBs">
    update event
    <set>
      <if test="definer != null">
        definer = #{definer,jdbcType=CHAR},
      </if>
      <if test="executeAt != null">
        execute_at = #{executeAt,jdbcType=TIMESTAMP},
      </if>
      <if test="intervalValue != null">
        interval_value = #{intervalValue,jdbcType=INTEGER},
      </if>
      <if test="intervalField != null">
        interval_field = #{intervalField,jdbcType=CHAR},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="modified != null">
        modified = #{modified,jdbcType=TIMESTAMP},
      </if>
      <if test="lastExecuted != null">
        last_executed = #{lastExecuted,jdbcType=TIMESTAMP},
      </if>
      <if test="starts != null">
        starts = #{starts,jdbcType=TIMESTAMP},
      </if>
      <if test="ends != null">
        ends = #{ends,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="onCompletion != null">
        on_completion = #{onCompletion,jdbcType=CHAR},
      </if>
      <if test="sqlMode != null">
        sql_mode = #{sqlMode,jdbcType=CHAR},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=CHAR},
      </if>
      <if test="originator != null">
        originator = #{originator,jdbcType=INTEGER},
      </if>
      <if test="timeZone != null">
        time_zone = #{timeZone,jdbcType=CHAR},
      </if>
      <if test="characterSetClient != null">
        character_set_client = #{characterSetClient,jdbcType=CHAR},
      </if>
      <if test="collationConnection != null">
        collation_connection = #{collationConnection,jdbcType=CHAR},
      </if>
      <if test="dbCollation != null">
        db_collation = #{dbCollation,jdbcType=CHAR},
      </if>
      <if test="body != null">
        body = #{body,jdbcType=LONGVARBINARY},
      </if>
      <if test="bodyUtf8 != null">
        body_utf8 = #{bodyUtf8,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where db = #{db,jdbcType=CHAR}
      and name = #{name,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="bean.EventWithBLOBs">
    update event
    set definer = #{definer,jdbcType=CHAR},
      execute_at = #{executeAt,jdbcType=TIMESTAMP},
      interval_value = #{intervalValue,jdbcType=INTEGER},
      interval_field = #{intervalField,jdbcType=CHAR},
      created = #{created,jdbcType=TIMESTAMP},
      modified = #{modified,jdbcType=TIMESTAMP},
      last_executed = #{lastExecuted,jdbcType=TIMESTAMP},
      starts = #{starts,jdbcType=TIMESTAMP},
      ends = #{ends,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=CHAR},
      on_completion = #{onCompletion,jdbcType=CHAR},
      sql_mode = #{sqlMode,jdbcType=CHAR},
      comment = #{comment,jdbcType=CHAR},
      originator = #{originator,jdbcType=INTEGER},
      time_zone = #{timeZone,jdbcType=CHAR},
      character_set_client = #{characterSetClient,jdbcType=CHAR},
      collation_connection = #{collationConnection,jdbcType=CHAR},
      db_collation = #{dbCollation,jdbcType=CHAR},
      body = #{body,jdbcType=LONGVARBINARY},
      body_utf8 = #{bodyUtf8,jdbcType=LONGVARBINARY}
    where db = #{db,jdbcType=CHAR}
      and name = #{name,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="bean.Event">
    update event
    set definer = #{definer,jdbcType=CHAR},
      execute_at = #{executeAt,jdbcType=TIMESTAMP},
      interval_value = #{intervalValue,jdbcType=INTEGER},
      interval_field = #{intervalField,jdbcType=CHAR},
      created = #{created,jdbcType=TIMESTAMP},
      modified = #{modified,jdbcType=TIMESTAMP},
      last_executed = #{lastExecuted,jdbcType=TIMESTAMP},
      starts = #{starts,jdbcType=TIMESTAMP},
      ends = #{ends,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=CHAR},
      on_completion = #{onCompletion,jdbcType=CHAR},
      sql_mode = #{sqlMode,jdbcType=CHAR},
      comment = #{comment,jdbcType=CHAR},
      originator = #{originator,jdbcType=INTEGER},
      time_zone = #{timeZone,jdbcType=CHAR},
      character_set_client = #{characterSetClient,jdbcType=CHAR},
      collation_connection = #{collationConnection,jdbcType=CHAR},
      db_collation = #{dbCollation,jdbcType=CHAR}
    where db = #{db,jdbcType=CHAR}
      and name = #{name,jdbcType=CHAR}
  </update>
</mapper>